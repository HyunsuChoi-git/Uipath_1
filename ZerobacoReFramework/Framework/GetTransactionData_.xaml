<Activity mc:Ignorable="sap sap2010 sads" x:Class="GetTransactionData"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:sd="clr-namespace:System.Data;assembly=System.Data"
 xmlns:ui="http://schemas.uipath.com/workflow/activities"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_TransactionNumber" Type="InArgument(x:Int32)" />
    <x:Property Name="out_TransactionItem" Type="OutArgument(sd:DataRow)" />
    <x:Property Name="out_TransactionField1" Type="OutArgument(x:String)" />
    <x:Property Name="out_TransactionField2" Type="OutArgument(x:String)" />
    <x:Property Name="out_TransactionID" Type="OutArgument(x:String)" />
    <x:Property Name="io_TransactionData" Type="InOutArgument(sd:DataTable)" />
    <x:Property Name="in_WIList" Type="InArgument(sd:DataRow[])" />
    <x:Property Name="in_Config" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap2010:WorkflowViewState.IdRef>GetTransactionData_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>Microsoft.Activities</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.Core</AssemblyReference>
      <AssemblyReference>UiPath.Core.Activities</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>Microsoft.Activities</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.VisualStudio.Services.Common</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>UiPath.Python</AssemblyReference>
      <AssemblyReference>UiPath.IntelligentOCR</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Description: Get data from spreadsheets, databases, email, web Api or UiPath server queues.. If no new data, set TransactionItem to Nothing. &#xA;&#xA;For a linear process (not repetitive), set TransactionItem only for TransactionNumber 1 - first and only transaction. &#xA;&#xA;TransactionItem is a DataRow. TransactionNumber is the index in the WIList&#xA;" DisplayName="GetTransactionData" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <WriteLine DisplayName="Write line" sap2010:WorkflowViewState.IdRef="WriteLine_2" Text="[&quot;in_TransactionNumber=&gt;&quot;+ in_TransactionNumber.ToString+&quot;::&quot;+ in_WIList.Count.ToString]" />
    <If Condition="[(in_TransactionNumber = in_WIList.Count) and (in_WIList.Count &lt;&gt; 0)]" DisplayName="최종 메일링처리" sap2010:WorkflowViewState.IdRef="If_2">
      <If.Then>
        <Sequence DisplayName="포워딩작업결과 메일 송신처리" sap2010:WorkflowViewState.IdRef="Sequence_8">
          <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke lsnikkoEmail_Login workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_3" UnSafe="False" WorkflowFileName="Email\lsnikkoEmail_Login.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <InArgument x:TypeArguments="x:String" x:Key="in_lsnikkoEmailURL">[in_Config("lsnikkoEmailURL").ToString]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_ManagerEmailCredential">[in_Config("ManagerEmail_Credential").ToString]</InArgument>
              <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_Config]</InArgument>
            </ui:InvokeWorkflowFile.Arguments>
          </ui:InvokeWorkflowFile>
          <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke SendEmailBookingResult workflow file" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_4" UnSafe="False" WorkflowFileName="Email\SendEmailBookingResult.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <InArgument x:TypeArguments="x:String" x:Key="in_lsnikkoEmailURL">[in_Config("lsnikkoEmailURL").ToString]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_ManagerEmailCredential">[in_Config("ManagerEmail_Credential").ToString]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_EmailMessage_Subject">[in_Config("EmailMessage_Subject").ToString]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_EmailMessage_SuccessBody">[in_Config("EmailMessage_SuccessBody").ToString]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_toEmailIdCC">[in_Config("toEmailIdCC").ToString]</InArgument>
              <InArgument x:TypeArguments="x:Int32" x:Key="in_TransactionNumber">[in_TransactionNumber]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_toEmailId">[in_Config("toEmailId").ToString]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_BasePath">[in_Config("BasePath").ToString]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_EmailMessage_ErrorSubject">[in_Config("EmailMessage_ErrorSubject").ToString]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_EmailMessage_Error">[in_Config("EmailMessage_Error").ToString]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_SendFilesURL">[in_Config("SendFilesURL").ToString]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_TransRequestURL">[in_Config("TransRequestURL").ToString]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_ForwardingResultURL">[in_Config("ForwardingResultURL").ToString]</InArgument>
            </ui:InvokeWorkflowFile.Arguments>
          </ui:InvokeWorkflowFile>
        </Sequence>
      </If.Then>
    </If>
    <If Condition="[in_TransactionNumber &lt;= in_WIList.Count]" DisplayName="If more items" sap2010:WorkflowViewState.IdRef="If_1">
      <If.Then>
        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_4">
          <Assign DisplayName="Assign TransactionItem" sap2010:WorkflowViewState.IdRef="Assign_5">
            <Assign.To>
              <OutArgument x:TypeArguments="sd:DataRow">[out_TransactionItem]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="sd:DataRow">[in_WIList(in_TransactionNumber)]</InArgument>
            </Assign.Value>
          </Assign>
        </Sequence>
      </If.Then>
      <If.Else>
        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_7">
          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_6">
            <Assign DisplayName="Assign TransactionItem" sap2010:WorkflowViewState.IdRef="Assign_2">
              <Assign.To>
                <OutArgument x:TypeArguments="sd:DataRow">[out_TransactionItem]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="sd:DataRow">[Nothing]</InArgument>
              </Assign.Value>
            </Assign>
          </Sequence>
        </Sequence>
      </If.Else>
    </If>
    <Assign DisplayName="Assign TransactionID" sap2010:WorkflowViewState.IdRef="Assign_7">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[out_TransactionID]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[now.ToString]</InArgument>
      </Assign.Value>
    </Assign>
    <WriteLine DisplayName="Write line" sap2010:WorkflowViewState.IdRef="WriteLine_1" Text="[&quot;out_TransactionID=&gt;&quot;  +out_TransactionID]" />
    <sads:DebugSymbol.Symbol>d0dDOlxVaVBhdGhcU0dTX0NDTEFTXzEu7Iug7LKt7ISc65Ox66GdXEZyYW1ld29ya1xHZXRUcmFuc2FjdGlvbkRhdGEueGFtbCpRA5cBDgIBAVIFUtABAgE/UwVwCgIBGHEFjAEKAgEJjQEFlAEOAgEFlQEFlQGZAQIBAlJcUs0BAgFAUxNTYAIBGVUJbhQCARpxE3FBAgEKcwl8FAIBEX8JigEUAgELkgEwkgE+AgEIjwExjwFEAgEGlQFclQGWAQIBA1YLXCMCATddC20jAgEbdAt7FAIBEoABC4kBFgIBDFlYWYcBAgE9WFFYeAIBO1piWm0CATlWxQFW5AECAThgWGCHAQIBNWhUaH4CATNjTWNwAgExYlpiigECAS9pTmlyAgEtX1FfeAIBK2RSZGgCASlrVWuAAQIBJ2VLZWwCASVmSmZqAgEjXc4BXfEBAgEialFqeAIBIGdbZ4wBAgEeYVZhggECARx5OHlZAgEVdjl2TgIBE4EBDYgBFgIBDYYBOoYBQwIBEIMBO4MBUAIBDg==</sads:DebugSymbol.Symbol>
  </Sequence>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="WriteLine_2" sap:VirtualizedContainerService.HintSize="575,61" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_3" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_4" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Sequence_8" sap:VirtualizedContainerService.HintSize="336,338">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_2" sap:VirtualizedContainerService.HintSize="575,486" />
      <sap2010:ViewStateData Id="Assign_5" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Sequence_4" sap:VirtualizedContainerService.HintSize="264,184">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_2" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Sequence_6" sap:VirtualizedContainerService.HintSize="264,184">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_7" sap:VirtualizedContainerService.HintSize="286,308">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_1" sap:VirtualizedContainerService.HintSize="575,456" />
      <sap2010:ViewStateData Id="Assign_7" sap:VirtualizedContainerService.HintSize="575,60" />
      <sap2010:ViewStateData Id="WriteLine_1" sap:VirtualizedContainerService.HintSize="575,61" />
      <sap2010:ViewStateData Id="Sequence_1" sap:VirtualizedContainerService.HintSize="597,1540">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="GetTransactionData_1" sap:VirtualizedContainerService.HintSize="637,1660" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>